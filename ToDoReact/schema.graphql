type Query {
  getAllTasks: [TaskDto!]!
  getTaskById(id: Int!): Task
}

type Mutation {
  createTask(input: CreateTaskInput!): TaskDto!
  updateTaskStatus(id: Int!, status: TaskStatus!): TaskDto
}

type Task {
  title: String!
  description: String!
  status: TaskStatus!
  createdAt: String!
  updatedAt: String!
  id: Int!
}

type TaskDto {
  title: String!
  description: String!
  status: TaskStatus!
  createdAt: String!
  updatedAt: String!
  id: String!
}

input CreateTaskInput {
  title: String!
  description: String
}

enum TaskStatus {
  PENDING
  COMPLETED
}